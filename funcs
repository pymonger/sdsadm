#!/bin/bash
BASE_PATH=$(dirname "${BASH_SOURCE}")
BASE_PATH=$(cd "${BASE_PATH}"; pwd)


# set globals
export ID=$UID
export GID=$(id -g)
if [ -e "/usr/bin/sw_vers" ]; then
  export ES_HEAP_SIZE=$(sysctl hw.memsize | awk '{print $2/1024/1024}')
else
  export ES_HEAP_SIZE=$(free -m | grep '^Mem:' | awk '{print $2}' | awk '{print $1/2}')
fi
IPADDRESS_ETH0=$(/usr/sbin/ifconfig $(/usr/sbin/route | awk '/default/{print $NF}') | grep 'inet ' | sed 's/addr://' | awk '{print $2}')
FQDN=$IPADDRESS_ETH0
export DATA_DIR=/data


# get subsystem component directory
get_comp_dir() {
  case "$1" in
  mozart|metrics|verdi)
    echo "$HOME/$1"
    ;;
  grq)
    echo "$HOME/sciflo"
    ;;
  factotum|ci)
    echo "$HOME/verdi"
    ;;
  esac
}


# initialize subsystem component directory
init() {
  comp=$1
  shift
  comp_dir=$(get_comp_dir $comp)
  if [ ! -d "${comp_dir}" ]; then
    mkdir -p $comp_dir
  fi
  if [ ! -e "$BASE_PATH/$comp/init.sh" ]; then
    echo "Init script for $comp not found at $BASE_PATH/$comp." >&2
    exit 4
  fi
  $BASE_PATH/$comp/init.sh $@
}


# start subsystem component
start() {
  comp=$1
  shift
  cd $BASE_PATH/$comp
  docker-compose down
  docker-compose up $@
}


# stop subsystem component
stop() {
  comp=$1
  shift
  cd $BASE_PATH/$comp
  docker-compose down $@
}


# run logs on subsystem component
logs() {
  comp=$1
  shift
  cd $BASE_PATH/$comp
  docker-compose logs $@
}


# run ps on subsystem component
ps() {
  comp=$1
  shift
  cd $BASE_PATH/$comp
  docker-compose ps $@
}


# run command in a subsystem component
run() {
  comp=$1
  shift

  # parse options
  compose_opts=""
  while (( "$#" )); do
    case "$1" in
      -v)
        compose_opts="$compose_opts -v $2"
        shift 2
        ;;
      -w)
        compose_opts="$compose_opts -w $2"
        shift 2
        ;;
      --) # end argument parsing
        shift
        break
        ;;
      -*|--*=) # unsupported flags
        echo "Error: Unsupported flag $1" >&2
        exit 1
        ;;
      *) # preserve positional arguments
        break
        ;;
    esac
  done

  cd $BASE_PATH/$comp
  docker-compose run --rm --no-deps \
    -v "$BASE_PATH/config/docker-entrypoint.sh:/docker-entrypoint.sh:ro" \
    $compose_opts $comp $@
}
