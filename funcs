#!/bin/bash
BASE_PATH=$(dirname "${BASH_SOURCE}")
BASE_PATH=$(cd "${BASE_PATH}"; pwd)


# set globals
export ID=$UID
export GID=$(id -g)
if [ -e "/usr/bin/sw_vers" ]; then
  export ES_HEAP_SIZE=$(sysctl hw.memsize | awk '{print $2/1024/1024}')
else
  export ES_HEAP_SIZE=$(free -m | grep '^Mem:' | awk '{print $2}' | awk '{print $1/2}')
fi
export SDS_DIR=$HOME/.sds
export SDS_CLUSTER_DIR=$SDS_DIR/cluster


# initialize .sds directory
init() {
  comp=$1
  shift
  comp_dir=$SDS_CLUSTER_DIR/$comp
  if [ ! -d "${comp_dir}" ]; then
    mkdir -p $comp_dir
  fi
  if [ ! -e "$BASE_PATH/$comp/init.sh" ]; then
    echo "Init script for $comp not found at $BASE_PATH/$comp." >&2
    exit 4
  fi
  $BASE_PATH/$comp/init.sh
}


# start subsystem component
start() {
  comp=$1
  shift
  init $comp
  cd $BASE_PATH/$comp
  docker-compose down
  docker-compose up $@
}


# stop subsystem component
stop() {
  comp=$1
  shift
  init $comp
  cd $BASE_PATH/$comp
  docker-compose down $@
}


# run logs on subsystem component
logs() {
  comp=$1
  shift
  init $comp
  cd $BASE_PATH/$comp
  docker-compose logs $@
}
