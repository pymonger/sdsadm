version: '3.7'
volumes:
  redis_data:
    driver: local
    driver_opts:
      device: "${HOME}/mozart/var/lib/redis"
      o: bind
services:
  mozart:
    hostname: mozart
    container_name: mozart
    image: hysds/mozart:${MOZART_TAG}
    init: true
    user: "${ID}:${GID}"
    ports:
      - "80:80"
      - "443:443"
      - "5555:5555"
    volumes:
      - "${HOME}/mozart/log:/home/ops/mozart/log"
      - "${HOME}/mozart/log/httpd:/etc/httpd/logs"
      - "${HOME}/.aws:/home/ops/.aws:ro"
      - "${HOME}/.netrc:/home/ops/.netrc:ro"
      - "${HOME}/mozart/etc/celeryconfig.py:/home/ops/mozart/etc/celeryconfig.py:ro"
      - "${HOME}/mozart/etc/supervisord.conf:/home/ops/mozart/etc/supervisord.conf:ro"
      - "${HOME}/mozart/etc/datasets.json:/home/ops/mozart/etc/datasets.json:ro"
      - "${HOME}/mozart/etc/job_status.template:/home/ops/mozart/etc/job_status.template:ro"
      - "${HOME}/mozart/etc/worker_status.template:/home/ops/mozart/etc/worker_status.template:ro"
      - "${HOME}/mozart/etc/task_status.template:/home/ops/mozart/etc/task_status.template:ro"
      - "${HOME}/mozart/etc/event_status.template:/home/ops/mozart/etc/event_status.template:ro"
      - "${HOME}/mozart/etc/indexer.conf:/home/ops/mozart/etc/indexer.conf:ro"
      - "${HOME}/mozart/etc/orchestrator_datasets.json:/home/ops/mozart/etc/orchestrator_datasets.json:ro"
      - "${HOME}/mozart/etc/orchestrator_jobs.json:/home/ops/mozart/etc/orchestrator_jobs.json:ro"
      - "${HOME}/mozart/etc/settings.cfg:/home/ops/mozart/etc/settings.cfg:ro"
      - "${HOME}/mozart/etc/utils.py:/home/ops/mozart/etc/job_creators/utils.py:ro"
      - "${HOME}/mozart/etc/utils_job.py:/home/ops/mozart/etc/job_creators/utils_job.py:ro"
      - "redis_data:/data/redis"
    links:
      - rabbitmq
      - redis
      - elasticsearch
  rabbitmq:
    image: hysds/rabbitmq:${RABBITMQ_TAG}
    hostname: mozart-rabbitmq
    container_name: mozart-rabbitmq
    user: "${ID}:${GID}"
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - "${HOME}/mozart/log/rabbitmq:/var/log/rabbitmq"
      - "${HOME}/mozart/var/lib/rabbitmq:/var/lib/rabbitmq"
      - "${HOME}/mozart/etc/rabbitmq-server:/etc/default/rabbitmq-server:ro"
      - "${HOME}/mozart/etc/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro"
    #########################################################
    # The following are commented out since the rabbitmq-server
    # config file increases it.
    #########################################################
    #ulimits:
    #  nofile:
    #      soft: 102400
    #      hard: 102400
    environment:
      - RABBITMQ_LOG_BASE=/var/log/rabbitmq
      - RABBITMQ_LOGS=$${RABBITMQ_LOG_BASE}/$${RABBITMQ_NODENAME}.log
      - RABBITMQ_SASL_LOGS=$${RABBITMQ_LOG_BASE}/$${RABBITMQ_NODENAME}-sasl.log
  redis:
    image: hysds/redis:${REDIS_TAG}
    hostname: mozart-redis
    container_name: mozart-redis
    user: "${ID}:${GID}"
    ports:
      - "6379:6379"
    volumes:
      - "${HOME}/mozart/log/redis:/var/log/redis"
      - "${HOME}/mozart/etc/redis-config:/etc/redis.conf:ro"
      - "redis_data:/data/redis"
    #########################################################
    # The following are commented out until docker supports
    # them becoming namespaced:
    # https://docs.docker.com/engine/reference/commandline/run/#configure-namespaced-kernel-parameters-sysctls-at-runtime
    # For now these are being set on the host via sysctld
    # using the ../config/10-hysds.conf file and the init.sh
    # script.
    #########################################################
    sysctls:
      #- vm.overcommit_memory=1
      #- vm.swappiness=0
      #- net.ipv4.tcp_sack=1
      #- net.ipv4.tcp_timestamps=1
      #- net.ipv4.tcp_window_scaling=1
      #- net.ipv4.tcp_congestion_control=cubic
      #- net.ipv4.tcp_syncookies=1
      #- net.ipv4.tcp_tw_recycle=1
      #- backlog setting
      #- net.ipv4.tcp_max_syn_backlog=102400
      - net.core.somaxconn=65535
      #- net.core.rmem_max=102400
      #- net.core.wmem_max=102400
      #- fs.file-max=102400
    ulimits:
      nofile:
          soft: 102400
          hard: 102400
    command: [ "redis-server",
               "/etc/redis.conf" ]
  elasticsearch:
    image: hysds/elasticsearch:${ELASTICSEARCH_TAG}
    hostname: mozart-elasticsearch
    container_name: mozart-elasticsearch
    user: "${ID}:${GID}"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - "${HOME}/mozart/log/elasticsearch:/usr/share/elasticsearch/logs"
      - "${HOME}/mozart/etc/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro"
      - "${HOME}/mozart/etc/logging.yml:/usr/share/elasticsearch/config/logging.yml:ro"
      - "${HOME}/mozart/var/lib/elasticsearch/data:/usr/share/elasticsearch/data"
    ulimits:
      memlock:
          soft: -1
          hard: -1
      nofile:
          soft: 102400
          hard: 102400
    #########################################################
    # The following are commented out until docker supports
    # them becoming namespaced:
    # https://docs.docker.com/engine/reference/commandline/run/#configure-namespaced-kernel-parameters-sysctls-at-runtime
    # For now these are being set on the host via sysctld
    # using the ../config/10-hysds.conf file and the init.sh
    # script.
    #########################################################
    sysctls:
      #- vm.max_map_count=262144
      - net.core.somaxconn=65535
    environment:
      - ES_HEAP_SIZE=${ES_HEAP_SIZE}m
      - MAX_LOCKED_MEMORY=unlimited
    command: [ "elasticsearch" ]
